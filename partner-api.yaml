openapi: 3.0.3

info:
  title: partner-api
  version: 'v2.0'
  description: 'Das Partnermanagment von Europace ermöglicht Organisationen ihre eigenen Struktur abzubilden, um jedem Partner oder Mitarbeiter einen Zugang zu geben und Rechte einzustellen.'
  contact:
    name: Europace AG
    url: 'http://docs.api.europace.de'
    email: info@europace.de
  termsOfService: 'https://docs.api.europace.de/nutzungsbedingungen/'

servers:
  - url: 'https://api.europace.de/v2'
    description: Produktion Server

externalDocs:
  url: https://docs.api.europace.de/baufinanzierung/partner/partner-api/

paths:
  '/partner/{partnerId}':
    parameters:
      - schema:
          type: string
        name: partnerId
        in: path
        required: true
        description: ID des Partners
    get:
      summary: Lese die Daten eines Partners
      operationId: getPartner
      description: Liefert die Daten eines Partners
      security:
        - europace_oauth2: ['partner:plakette:lesen']
      responses:
        '200':
          description: 'Es werden je nach Typ (Person, Organisation) unterschiedliche Datenstrukturen geliefert.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partner'
              examples:
                Partner:
                  value:
                    partnerId: SZY92
                    vorname: Max
                    nachname: Musterman
                    typ: PERSON
                    email: community@europace2.de
                    webseite: https://www.europace2.de
                    avatar: https://www.europace2.de/partnermanagement/984094aa488a4dd8e3273c4b898fe63e.avatar?id=4ff189174ad2e9f19178073b
                    gesperrt: false
                    parent:
                      partnerId: WER03
                    telefonnummer: "(030) 12345678"
                    firmenname: Firma
                    anschrift:
                      strasse: Heidestraße
                      hausnummer: '8'
                      plz: '10557'
                      ort: Berlin
                    bankverbindung:
                      kontoinhaber: Dr. Klein & Co. AG
                      bic: PBNKDEFFXXX
                      iban: DE94370100500040661506
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Partner ist nicht vorhanden oder es darf nicht auf ihn zugegriffen werden.
      tags:
        - Partner
    patch:
      summary: Partner anpassen
      operationId: updatePartner
      responses:
        '200':
          description: |-
            Partner wurde angepasst.

            Der Body der Response enthält die aktuellen Stammdaten im JSON Format. Dies kann zur Erfolgskontrolle genutzt werden. Attribute, die serverseitig gesetzt werden bzw. für die es Defaultwerte gibt, sind dabei immer enthalten.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partner'
        '400':
          description: Bad Request - Validierung ist fehlgeschlagen
          content:
            application/json:
              schema:
                title: Error
                type: object
                properties:
                  message:
                    type: string
                  traceId:
                    type: string
                required:
                  - message
              examples:
                Beispiel:
                  value:
                    message: "Enum literal für 'anrede' muss FRAU oder HERR sein.: abc"
                    traceId: ' ff-request-2014-10-01-07-55'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Partner'
        description: 'Es brauchen nur die Attribute angegeben werden, die sich verändern sollen.'
      description: Partner anpassen
      security:
        - europace_oauth2: ['partner:plakette:schreiben']
      tags:
        - Partner

  '/partner/{partnerId}/rechte':
    parameters:
      - schema:
          type: string
        name: partnerId
        in: path
        required: true
        description: ID des Partners
    get:
      summary: Rechte des Partners lesen.
      operationId: getPartnerRechte
      description: Liefert die Rechte eines Partners
      security:
        - europace_oauth2: ['partner:rechte:lesen']
      tags:
        - Partner
      responses:
        '200':
          description: 'Es werden die Rechte eines Partners zurück gegeben.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rechte'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Partner ist nicht vorhanden oder es darf nicht auf ihn zugegriffen werden.
    patch:
      summary: Ein Recht eines Partners setzen
      operationId: setPartnerRecht
      description: Alle Rechte eines Partners aktualisieren
      security:
        - europace_oauth2: ['partner:rechte:schreiben']
      tags:
        - Partner
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rechte'
      responses:
        '200':
          description: 'Es werden die geänderten Rechte eines Partners zurück gegeben.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rechte'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Partner ist nicht vorhanden oder es darf nicht auf ihn zugegriffen werden.

  '/partner/{partnerId}/untergeordnete':
    parameters:
      - schema:
          type: string
        name: partnerId
        in: path
        required: true
        description: ID des Partners
    post:
      summary: Partner erstellen
      operationId: createPartner
      description: 'Erstellt einen neuen Partner als Organisation oder Person, abhängig vom Typ.'
      security:
        - europace_oauth2: ['partner:plakette:anlegen']
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Partner'
            examples:
              Person:
                value:
                  anrede: HERR
                  vorname: Max
                  nachname: Mustermann
                  email: max.musterman@exmaple.org
                  gesperrt: false
                  kreditsachbearbeiter: true
                  externePartnerId: '123456'
                  titelFunktion: Softwareentwickler
                  geburtsdatum: '1970-01-01'
                  telefonnummer: 030 123456
                  mobilnummer: 030 123456
                  faxnummer: 030 123456
                  firmenname: Europace AG
                  firmennameZusatz: Aktiengesellschaft
                  webseite: https://github.com/europace/partner-api
                  anschrift:
                    strasse: Musterstraße
                    hausnummer: '5'
                    plz: '12345'
                    ort: Musterstadt
                  bankverbindung:
                    kontoinhaber: Max Musterman
                    bic: BYLADEM1001
                    iban: DE02120300000000202051
                    referenzFeld: Test Ref
                  aufsichtsbehoerde: Musterbehoerde
                  registrierungsnummer: '987654'
        description: |-
          Bei der serverseitigen Auswertung gelten folgende Regeln:

          * unbekannte Attribute werden ignoriert.
          * Für Organisationen werden personenspezifische Attribute ignoriert.
          * Für Personen werden organisationenspezifische Attribute ignoriert.
          * Leere Attribute bei Strings ("") werden ignoriert.
          * "id" ist nicht setzbar und wird deshalb ignoriert.
          * Rechte werden für Personen -sofern nicht angegeben- mit "false" belegt.
      tags:
        - Partner
      responses:
        '201':
          description: |-
            Partner wurde erstellt.

            Der Body der Response enthält die aktuellen Stammdaten im JSON Format. Dies kann zur Erfolgskontrolle genutzt werden. Attribute, die serverseitig gesetzt werden bzw. für die es Defaultwerte gibt, sind dabei immer enthalten.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partner'
              examples:
                Person:
                  value:
                    partnerId: SZY92
                    typ: PERSON
                    avatar: https://www.europace2.de/partnermanagement/984094aa488a4dd8e3273c4b898fe63e.avatar?id=4ff189174ad2e9f19178073b
                    parent:
                      partnerId: WER03
                    anrede: HERR
                    vorname: Max
                    nachname: Mustermann
                    email: max.musterman@exmaple.org
                    gesperrt: false
                    kreditsachbearbeiter: true
                    externePartnerId: '123456'
                    titelFunktion: Softwareentwickler
                    geburtsdatum: '1970-01-01'
                    telefonnummer: 030 123456
                    mobilnummer: 030 123456
                    faxnummer: 030 123456
                    firmenname: Europace AG
                    firmennameZusatz: Aktiengesellschaft
                    webseite: https://github.com/europace/partner-api
                    anschrift:
                      strasse: Musterstraße
                      hausnummer: '5'
                      plz: '12345'
                      ort: Musterstadt
                    bankverbindung:
                      kontoinhaber: Max Musterman
                      bic: BYLADEM1001
                      iban: DE02120300000000202051
                      referenzFeld: Test Ref
                    aufsichtsbehoerde: Musterbehoerde
                    registrierungsnummer: '987654'
          headers:
            Location:
              schema:
                type: string
              description: 'Link auf den neu angelegten Partner '
        '205':
          description: Partner konnte anhand der PartnerId oder externen PartnerId gefunden werden und wurde aktualisiert.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partner'
          headers:
            Location:
              schema:
                type: string
              description: Link auf den gefundenen und aktualsierten Partner
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: 'Für das Anlegen neuer Partner benötigt der Aufrufer das Recht "Darf Organisationseinheiten anlegen" sowie Einstellungsrechte auf denjenigen Partner, unterhalb dessen der neue Partner angelegt werden soll. Sind diese nicht vorhanden, erhält der Aufrufer eine HTTP Response mit Statuscode 403 FORBIDDEN.'
    get:
      summary: untergeordnete Partner abrufen
      operationId: getChildren
      description: Liefert eine Liste von untergeordneten Partnern.
      security:
        - europace_oauth2: ['partner:plakette:lesen']
      responses:
        '200':
          description: Liste von untergeordneten Partnern.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Plakette'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      tags:
        - Partner

  '/partner/{partnerId}/partnerkennzeichen':
    parameters:
      - schema:
          type: string
        name: partnerId
        in: path
        required: true
        description: ID des Partners
    get:
      summary: Partnerkennzeichen abrufen
      operationId: getPartnerkennzeichen
      description: Die Partnerkennzeichen identifizieren einen Vertrieb bei einem Produktanbieter. Die erfassten Werte können über diesen Endpunkt ausgelesen werden.
      security:
        - europace_oauth2: ['partner:plakette:lesen']
      tags:
        - Partner
      responses:
        '200':
          description: Liste mit Partnerkennzeichen
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partnerkennzeichen'
              examples:
                Beispiel:
                  value:
                    dslSapGeschaeftspartnerNummerFuerRatenkredit: cdts-dsl-sap-vo
                    dslVertriebsWegSchluesselFuerRatenkredit: '1899026629'
                    dkbVertriebsIdFuerRatenkredit: cdts-dkb-vertrieb
                    kennzeichenIngDiba:
                      vermittlerNummer: '9800002186'
                      vermittlerVorname: wer
                      vermittlerNachname: wer
                      vermittlerNummerFuerRatenkredit: cdts-ing-diba-vermittler
                    kennzeichenErgo: {}
                    kennzeichenBhw:
                      vgeNummer: 6248/205585.0
                      orgaNummer: ORGA123
                      zurIdentifikationsPruefungLegitimiert: 'false'
                    lbsOstVermittlerNummer: lbsost-werwer-vermittler
                    lbsShhVermittlerNummer: lbs-ssh-ldapvermittler
                    lbsSuedwestVermittlerNummer: lbs-südwest-ldapvermittler
                    lbsWestVermittlerNummer: lbs-west-ldapvermittler
                    allianzVertreterNummer: 01/012/0123
                    axaGeschaeftsPartnerNummer: MA 00352
                    dslVermittlerGruppenSchluessel: '1200'
                    bshVoNummer: abcdefghijklmnopqrstuvwxyz
                    bshAkquisitionsWeg: AW1
                    bshBlzVertriebsbank: '1234567890'
                    dzHypVermittlerNummer: '1234'
                    alteLeipzigerVerbundVermittlerNummer: '42'
                    rundvBankAgenturNummer: RV_BAN
                    rundvBlzVertriebsbank: RV_BLZ
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  '/partner/{partnerId}/administrierbare':
    parameters:
      - in: path
        name: partnerId
        schema:
          type: string
        required: true
        description: ID des Partners

    get:
      summary: Alle Plaketten abrufen, auf die der Partner Einstellungsrechte hat.
      operationId: getAdministrierbare
      tags:
        - Partner
      description: |
        Liefert alle Partner, bei denen dieser Partner die Daten und Berechtigungen ändern oder das Reporting abrufen darf.
        Es wird mindestens der Partner selbst zurückgegeben, da jeder mindestens sich selbst einstellen oder sein eigenes Reporting abrufen darf.
        Um eine bessere Performance zu erreichen, wurde in der neuen PEX2 darauf verzichtet die implizit administrierbaren Partner mit ausgegeben.
        Um diese zu ermitteln, ist es notwendig über die Untergeordneten der Resultliste zu iterieren.
      security:
        - europace_oauth2: ['partner:beziehungen:lesen']
      responses:
        '200':
          description: 'Liste aller Partner, bei denen dieser Partner die Daten und Berechtigungen ändern oder das Reporting abrufen darf.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentPartnerIds'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  '/partner/{partnerId}/uebernehmbare':
    parameters:
      - name: partnerId
        description: ID des Partners
        in: path
        required: true
        schema:
          type: string

    get:
      summary: |
        Alle Partner abrufen, für die ein Übernahmerecht im Partnermanagement angelegt ist. Um eine bessere Performance
        zu erreichen, wurde in der neuen PEX2 darauf verzichtet die implizit Übernehmbaren mit ausgegeben.
        Um diese zu ermitteln, ist es notwendig über die Untergeordneten der Resultliste zu iterieren.
      operationId: getUebernehmbare
      tags:
        - Partner
      description: 'Liefert alle Partner, deren Daten von dem Partner gesehen, geöffnet und bearbeitet werden können (Zugriff). '
      security:
        - europace_oauth2: ['partner:beziehungen:lesen']
      responses:
        '200':
          description: 'Liste alle Partner, deren Vorgänge von dem Partner gesehen, geöffnet und bearbeitet werden können (Zugriff). '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentPartnerIds'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  '/partner/{partnerId}/uebernahmeRechtFuer/{target}':
    parameters:
      - schema:
          type: string
        name: partnerId
        in: path
        required: true
        description: 'Partner, dessen Zugriffrechte ermittelt werden sollen'
      - schema:
          type: string
        name: target
        in: path
        required: true
        description: 'Partner, auf den zugegriffenen werden soll'
    get:
      summary: Zugriffrecht auf einen bestimmten Partner prüfen
      operationId: getUebernahmeRechtFuer
      tags:
        - Partner
      description: 'Ermittelt, ob der Partner auf die Vorgänge eines anderen Partner zugreifen darf'
      security:
        - europace_oauth2: ['partner:beziehungen:lesen']
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: Target
                type: object
                properties:
                  partner:
                    $ref: '#/components/schemas/Plakette'
                  uebernehmbar:
                    type: boolean
                    description: 'Kann auf die Vorgänge des Partner zugegriffen werden? '
              examples:
                Beispiel:
                  value:
                    partner:
                      partnerId: AAV43
                      gesperrt: false
                    uebernehmbar: true
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

components:
  securitySchemes:
    europace_oauth2:
      $ref: 'https://raw.githubusercontent.com/europace/authorization-api/master/europace_security.yaml'

  schemas:
    PartnerId:
      type: object
      properties:
        partnerId:
          type: string
          description: Europace PartnerId (readonly)
          minLength: 5
          readOnly: true

    Plakette:
      type: object
      properties:
        partnerId:
          type: string
          description: Europace PartnerId (readonly)
          minLength: 5
          readOnly: true
        vorname:
          type: string
          description: "Dieses Feld ist nur für den Typ 'PERSON' gefüllt."
        nachname:
          type: string
          description: "Dieses Feld ist nur für den Typ 'PERSON' gefüllt."
        name:
          type: string
          description: "Dieses Feld ist nur für den Typ 'ORGANISATION' gefüllt."
        typ:
          readOnly: true
          $ref: '#/components/schemas/Typ'
        email:
          type: string
          format: email
          example:
            john.doe@example.org
        avatar:
          type: string
          format: uri
          readOnly: true
        gesperrt:
          type: boolean
          default: false
          description: 'true, wenn der Partner oder ein übergeordneter Partner gesperrt ist.'
        kreditsachbearbeiter:
          type: boolean

    Partner:
      title: Partner
      allOf:
        - $ref: '#/components/schemas/Plakette'
        - type: object
          properties:
            parent:
              title: parent
              allOf:
                - $ref: '#/components/schemas/PartnerId'
            externePartnerId:
              type: string
              description: 'Eine beliebige, extern erzeugte Id. Z.B. SAP oder CRM Nummer.'
            titelFunktion:
              type: string
            anrede:
              type: string
              enum:
                - HERR
                - FRAU
              example: FRAU
            geburtsdatum:
              type: string
              format: date
              description: ISO-8601 Calender extended(YYYY-MM-DD) format.
              example: 1980-12-11
            telefonnummer:
              type: string
            mobilnummer:
              type: string
            faxnummer:
              type: string
            firmenname:
              type: string
            firmennameZusatz:
              type: string
              description: Zusatz zur Firma (z.B. Abteilung)
            webseite:
              type: string
              format: uri
            anschrift:
              $ref: '#/components/schemas/Anschrift'
            bankverbindung:
              $ref: '#/components/schemas/Bankverbindung'
            aufsichtsbehoerde:
              type: string
            registrierungsnummer:
              type: string

    Rechte:
      title: Rechte
      type: object
      properties:
        partnermanagement:
          type: object
          description: Rechte des Partnermanagements
          properties:
            apiClientEinstellungenVornehmen:
              type: boolean
              default: false
              description: Darf API Client Einstellungen vornehmen
            einstellungenOeffnen:
              type: boolean
              default: false
            baufiSmartEinstellungenVornehmen:
              type: boolean
              default: false
            partnerAnlegen:
              type: boolean
              default: false
              description: Darf Partner anlegen
        baufismart:
          type: object
          description: Rechte der BaufiSmart Oberfläche
          properties:
            baufiSmartNutzen:
              type: boolean
              default: true
            echtgeschaeft:
              type: boolean
              default: false
            vorgaengeUeberOberflaecheAnlegen:
              type: boolean
              default: true
            ergebnisListeNutzen:
              type: boolean
              default: false
            loeschen:
              type: boolean
              default: false
              description: Darf Baufismart-Vorgänge und damit verbundende Daten löschen
        kreditsmart:
          type: object
          properties:
            echtgeschaeft:
              type: boolean
              default: false
            kreditSmartSichtbar:
              type: boolean
              default: false
            versicherungAnbieten:
              type: boolean
              default: false
            vorgaengeUeberOberflaecheAnlegen:
              type: boolean
              default: false

    Bankverbindung:
      title: bankverbindung
      type: object
      properties:
        referenzFeld:
          type: string
        kontoinhaber:
          type: string
        bic:
          type: string
        iban:
          type: string
          minLength: 22
          maxLength: 22

    Anschrift:
      title: anschrift
      type: object
      properties:
        strasse:
          type: string
        hausnummer:
          type: string
        plz:
          type: string
          minLength: 5
          maxLength: 5
        ort:
          type: string

    ContentPartnerIds:
      title: content
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/PartnerId'
        next:
          type: string
          description: Optional, present if next page exist.
        prev:
          type: string
          description: Optional, present if previous page exist.

    Partnerkennzeichen:
      type: object
      properties:
        dslSapGeschaeftspartnerNummerFuerRatenkredit:
          type: string
        dslVertriebsWegSchluesselFuerRatenkredit:
          type: string
        dkbVertriebsIdFuerRatenkredit:
          type: string
        kennzeichenIngDiba:
          type: object
          properties:
            vermittlerNummer:
              type: string
            vermittlerVorname:
              type: string
            vermittlerNachname:
              type: string
            vermittlerNummerFuerRatenkredit:
              type: string
        kennzeichenErgo:
          type: object
          properties:
            maklerBuero:
              type: string
            bdNummer:
              type: string
        kennzeichenBhw:
          type: object
          properties:
            vgeNummer:
              type: string
            orgaNummer:
              type: string
            zurIdentifikationsPruefungLegitimiert:
              type: string
        lbsNordVermittlerNummer:
          type: string
        lbsOstVermittlerNummer:
          type: string
        lbsShhVermittlerNummer:
          type: string
        lbsSuedwestVermittlerNummer:
          type: string
        lbsWestVermittlerNummer:
          type: string
        devkVermittlerNummer:
          type: string
        wuestenrotVermittlerNummer:
          type: string
        allianzVertreterNummer:
          type: string
        axaGeschaeftsPartnerNummer:
          type: string
        dslVermittlerGruppenSchluessel:
          type: string
        bshVoNummer:
          type: string
        bshAkquisitionsWeg:
          type: string
        bshBlzVertriebsbank:
          type: string
        dzHypVermittlerNummer:
          type: string
        naevVermittlerNummer:
          type: string
        rUndvBankAgenturNummer:
          type: string
        rUndvBlzVertriebsbank:
          type: string
        bausparkasseMainzVermittlerNummer:
          type: string
        deutscherRingVermittlerNummer:
          type: string
        alteLeipzigerVerbundVermittlerNummer:
          type: string
        signalIdunaBetreuerNummer:
          type: string
        signalIdunaFilialDirektionNummer:
          type: string
        hanseaticVertriebsPartnerNummer:
          type: string
        commerzbankVermittlerNummer:
          type: string

    Typ:
      type: string
      enum:
        - PERSON
        - ORGANISATION
