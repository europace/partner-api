openapi: 3.0.0

info:
  title: partner-api
  version: '2.0.0'
  description: 'Das Partnermanagment von Europace ermöglicht Organisationen ihre eigenen Struktur abzubilden, um jedem Partner oder Mitarbeiter einen Zugang zu geben und Rechte einzustellen.'
  contact:
    name: Europace AG
    url: 'http://developer.europace.de'
    email: info@europace.de
  termsOfService: 'https://developer.europace.de/terms/'

servers:
  - url: 'https://api.europace.de/v2/partnermanagement'
    description: production server
  - url: 'https://api.europace.de/stub/partnermanagement'
    description: test server

externalDocs:
  url: https://developer.europace.de/api/partner-api/

paths:
  '/partner/{partnerId}':
    parameters:
      - schema:
          type: string
        name: partnerId
        in: path
        required: true
        description: ID des Partners
    get:
      summary: Read data of a Partner
      operationId: getPartner
      description: Liefert die Daten eines Partners
      security:
        - europace_oauth2: ['partner:entity:read']
      responses:
        '200':
          description: 'Es werden je nach Typ (Person, Organisation) unterschiedliche Datenstrukturen geliefert.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partner'
              examples:
                Partner:
                  value:
                    _links:
                      self: 'https://api.europace.de/v2/partnermanagement/partner/ABC12'
                      rechte: 'https://api.europace.de/v2/partnermanagement/partner/ABC12/rechte'
                      administrierbare: 'https://api.europace.de/v2/partnermanagement/partner/ABC12/administrierbare'
                      partnerkennzeichen: 'https://api.europace.de/v2/partnermanagement/partner/ABC12/partnerkennzeichen'
                    partnerId: 'ABC12'
                    anrede: HERR
                    typ: PERSON
                    nachname: Mustermann
                    vorname: Max
                    externePartnerId: '123456'
                    geburtsdatum: '1970-01-01'
                    gesperrt: false
                    telefonnummer: 030 123456
                    webseiteUrl: 'https://github.com/europace/partner-api'
                    aufsichtsBehoerde: Musterbehörde
                    registrierungsNummer: '987654'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Partner ist nicht vorhanden oder es darf nicht auf ihn zugegriffen werden.
      tags:
        - Partner
    patch:
      summary: Partner anpassen
      operationId: updatePartner
      responses:
        '200':
          description: |-
            Partner wurde angepasst.

            Der Body der Response enthält die aktuellen Stammdaten im JSON Format. Dies kann zur Erfolgskontrolle genutzt werden. Attribute, die serverseitig gesetzt werden bzw. für die es Defaultwerte gibt, sind dabei immer enthalten.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partner'
        '400':
          description: Bad Request - Validierung ist fehlgeschlagen
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  traceId:
                    type: string
                required:
                  - message
              examples:
                Beispiel:
                  value:
                    message: "Enum literal für 'anrede' muss FRAU oder HERR sein.: abc"
                    traceId: ' ff-request-2014-10-01-07-55'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Partner'
        description: 'Es brauchen nur die Attribute angegeben werden, die sich verändern sollen.'
      description: Partner anpassen
      security:
        - europace_oauth2: ['partner:entity:write']
      tags:
        - Partner

  '/partner/{partnerId}/rechte':
    parameters:
      - schema:
          type: string
        name: partnerId
        in: path
        required: true
        description: ID des Partners
    get:
      summary: Rechte des Partners lesen.
      operationId: getPartnerRechte
      description: Liefert die Rechte eines Partners
      security:
        - europace_oauth2: ['partner:rechte:read']
      responses:
        '200':
          description: 'Es werden die Rechte eines Partners zurück gegeben.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rechte'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Partner ist nicht vorhanden oder es darf nicht auf ihn zugegriffen werden.
    patch:
      summary: Ein Recht eines Partners setzen
      operationId: setPartnerRecht
      description: Alle Rechte eines Partners aktualisieren
      security:
        - europace_oauth2: ['partner:rechte:write']
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rechte'
      responses:
        '200':
          description: 'Es werden die geänderten Rechte eines Partners zurück gegeben.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rechte'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Partner ist nicht vorhanden oder es darf nicht auf ihn zugegriffen werden.

  '/partner/{partnerId}/untergeordnetePartner':
    parameters:
      - schema:
          type: string
        name: partnerId
        in: path
        required: true
        description: ID des Partners
    post:
      summary: Partner erstellen
      operationId: createPartner
      description: 'Erstellt einen neuen Partner als Organisation oder Person, abhängig vom Typ.'
      security:
        - europace_oauth2: ['partner:entity:create']
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Partner'
            examples:
              Person:
                value:
                  anrede: HERR
                  email: max@mustermann.de
                  externePartnerId: MAK004712
                  nachname: Mustermann
                  vorname: Max
        description: |-
          Bei der serverseitigen Auswertung gelten folgende Regeln:

          * unbekannte Attribute werden ignoriert.
          * Für Organisationen werden personenspezifische Attribute ignoriert.
          * Für Personen werden organisationenspezifische Attribute ignoriert.
          * Leere Attribute bei Strings ("") werden ignoriert.
          * "gesperrtTransitiv" ist nicht von aussen änderbar und wird deshalb ignoriert
          * "id" ist nicht setzbar und wird deshalb ignoriert.
          * Rechte werden für Personen -sofern nicht angegeben- mit "false" belegt.
      tags:
        - Partner
      responses:
        '201':
          description: |-
            Partner wurde erstellt.

            Der Body der Response enthält die aktuellen Stammdaten im JSON Format. Dies kann zur Erfolgskontrolle genutzt werden. Attribute, die serverseitig gesetzt werden bzw. für die es Defaultwerte gibt, sind dabei immer enthalten.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partner'
              examples:
                Person:
                  value:
                    _links:
                      self: 'https://api.europace.de/v2/partnermanagement/partner/LUI92'
                      partnerkennzeichen: 'https://api.europace.de/v2/partnermanagement/partner/LUI92/partnerkennzeichen'
                      administrierbare: 'https://api.europace.de/v2/partnermanagement/partner/LUI92/administrierbare'
                    partnerId: LUI92
                    typ: PERSON
                    externePartnerId: MAK004712
                    avatarUrl: 'https://api.europace.de/v2/partnermanagement/LUI92.avatar'
                    anrede: HERR
                    vorname: Max
                    nachname: Mustermann
                    email: max@mustermann.de
                    gesperrt: false
          headers:
            Location:
              schema:
                type: string
              description: 'Link auf den neu angelegten Partner '
        '205':
          description: Partner konnte anhand der PartnerId oder externen PartnerId gefunden werden und wurde aktualisiert.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partner'
          headers:
            Location:
              schema:
                type: string
              description: Link auf den gefundenen und aktualsierten Partner
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: 'Für das Anlegen neuer Partner benötigt der Aufrufer das Recht "Darf Organisationseinheiten anlegen" sowie Einstellungsrechte auf denjenigen Partner, unterhalb dessen der neue Partner angelegt werden soll. Sind diese nicht vorhanden, erhält der Aufrufer eine HTTP Response mit Statuscode 403 FORBIDDEN.'
    get:
      summary: untergeordnete Partner abrufen
      operationId: getChildren
      description: Liefert eine Liste von untergeordneten Partnern.
      security:
        - europace_oauth2: ['partner:entity:read']
      responses:
        '200':
          description: Liste von untergeordneten Partnern.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Plakette'
              examples:
                Beispiel:
                  value:
                    - partnerId: ABC12
                      _links:
                        self: 'https://api.europace.de/v2/partnermanagement/partner/ABC12'
                    - partnerId: CDE23
                      _links:
                        self: 'https://api.europace.de/v2/partnermanagement/partner/CDE23'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      tags:
        - Partner

  '/partner/{partnerId}/partnerkennzeichen':
    parameters:
      - schema:
          type: string
        name: partnerId
        in: path
        required: true
        description: ID des Partners
    get:
      summary: Partnerkennzeichen abrufen
      operationId: getChildren
      description: Die Partnerkennzeichen identifizieren einen Vertrieb bei einem Produktanbieter. Die erfassten Werte können über diesen Endpunkt ausgelesen werden.
      security:
        - europace_oauth2: ['partner:entity:read']
      tags:
        - Partner
      responses:
        '200':
          description: Liste mit Partnerkennzeichen
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partnerkennzeichen'
              examples:
                Beispiel:
                  value:
                    dslSapGeschaeftspartnerNummerFuerRatenkredit: '1516119444'
                    dslVertriebsWegSchluesselFuerRatenkredit: '1899010083'
                    partnerKennzeichenDerVertriebsOrganisation:
                      _links:
                        partner:
                          href: 'https://api.europace.de/v2/partnermanagement/partner/TYL29'
                        self:
                          href: 'https://api.europace.de/v2/partnermanagement/partner/TYL29/partnerkennzeichen'
                      dslSapGeschaeftspartnerNummerFuerRatenkredit: '1516119444'
                    _links:
                      partner:
                        href: 'https://api.europace.de/v2/partnermanagement/partner/XUL48'
                      self:
                        href: 'https://api.europace.de/v2/partnermanagement/partner/XUL48/partnerkennzeichen'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  '/partner/{partnerId}/administrierbare':
    parameters:
      - schema:
          type: string
        name: partnerId
        in: path
        required: true
        description: ID des Partners
    get:
      summary: Alle Plaketten abrufen, auf die der Partner Einstellungsrechte hat.
      tags:
        - Partner
      description: |-
        Liefert alle Partner, bei denen dieser Partner die Daten und Berechtigungen ändern oder das Reporting abrufen darf.
        Es wird mindestens der Partner selbst zurückgegeben, da jeder mindestens sich selbst einstellen oder sein eigenes Reporting abrufen darf.
      security:
        - europace_oauth2: ['partner:relationships:read']
      responses:
        '200':
          description: 'Liste aller Partner, bei denen dieser Partner die Daten und Berechtigungen ändern oder das Reporting abrufen darf.'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Plakette'
              examples:
                Person:
                  value:
                    - partnerId: AAV43
                      vorname: Max
                      nachname: Mustermann
                      typ: PERSON
                      _links:
                        self: 'https://api.europace.de/v2/partnermanagement/partner/AAV43'
                        administrierbare: 'https://api.europace.de/v2/partnermanagement/partner/AAV43/administrierbare'
                        partnerkennzeichen: 'https://api.europace.de/v2/partnermanagement/partner/AAV43/partnerkennzeichen'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  '/partner/{partnerId}/uebernahmeRechtFuer':
    parameters:
      - schema:
          type: string
        name: partnerId
        in: path
        required: true
        description: ID des Partners
    get:
      summary: Alle Partner abrufen, auf die der Partner Übernahmerecht hat.
      tags:
        - Partner
      description: 'Liefert alle Partner, deren Daten von dem Partner gesehen, geöffnet und bearbeitet werden können (Zugriff). '
      security:
        - europace_oauth2: ['partner:relationships:read']
      responses:
        '200':
          description: 'Liste alle Partner, deren Vorgänge von dem Partner gesehen, geöffnet und bearbeitet werden können (Zugriff). '
          content:
            application/json:
              schema:
                type: object
                properties:
                  Partner:
                    $ref: '#/components/schemas/Plakette'
                  alleSichtbar:
                    type: boolean
                required:
                  - alleSichtbar
              examples:
                alle_sichbar:
                  value:
                    alleSichtbar: true
                nicht_alle_sichtbar:
                  value:
                    alleSichtbar: false
                    Partner:
                      partnerId: ABC12
                      vorname: Max
                      nachname: Mustermann
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  '/partner/{partnerId}/uebernahmeRechtFuer/{partnerId2}':
    parameters:
      - schema:
          type: string
        name: partnerId
        in: path
        required: true
        description: 'Partner, dessen Zugriffrechte ermittelt werden sollen'
      - schema:
          type: string
        name: partnerId2
        in: path
        required: true
        description: 'Partner, auf den zugegriffenen werden soll'
    get:
      summary: Zugriffrecht auf einen bestimmten Partner prüfen
      tags:
        - Partner
      description: 'Ermittelt, ob der Partner auf die Vorgänge eines anderen Partner zugreifen darf'
      security:
        - europace_oauth2: ['partner:relationships:read']
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  Partner:
                    $ref: '#/components/schemas/Plakette'
                  uebernehmbar:
                    type: boolean
                    description: 'Kann auf die Vorgänge des Partner zugegriffen werden? '
                required:
                  - uebernehmbar
              examples:
                Beispiel:
                  value:
                    partnerId: AAV43
                    gesperrt: false
                    uebernehmbar: true
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

components:
  securitySchemes:
    europace_oauth2:
      type: oauth2
      description: This API uses OAuth 2 with the client credentials flow. [More info](https://auth0.com/docs/flows/concepts/client-credentials)
      flows:
        clientCredentials:
          tokenUrl: https://api.europace.de/auth/token
          scopes:
            partner:entity:create: Create a new Partner entity
            partner:entity:delete: Delete the whole Partner
            partner:entity:read: Read partner data
            partner:entity:write: Modify data of a partner
            partner:relationships:read: Read relationships between partners
            partner:relationships:write: Modify relationships between partners
            partner:rechte:read: Read Rechte eines Partners
            partner:rechte:write: Schreibe Rechte eines Partners

  schemas:
    Plakette:
      type: object
      properties:
        partnerId:
          type: string
          description: Europace PartnerId (readonly)
          minLength: 5
          maxLength: 5
        vorname:
          type: string
        nachname:
          type: string
        typ:
          type: string
          enum:
            - PERSON
            - ORGANISATION
          example:
            - PERSON
        email:
          type: string
          format: email
          example:
            john.doe@example.org
        avatarUrl:
          type: string
          format: uri
        gesperrt:
          type: boolean
          default: false
          description: 'true, wenn der Partner oder ein übergeordneter Partner gesperrt ist.'
        kreditsachbearbeiter:
          type: boolean
        _links:
          $ref: '#/components/schemas/_links'
      required:
        - partnerId

    Partner:
      title: Partner
      allOf:
        - $ref: '#/components/schemas/Plakette'
        - type: object
          properties:
            externePartnerId:
              type: string
              description: 'Eine beliebige, extern erzeugte Id. Z.B. SAP oder CRM Nummer.'
            titelFunktion:
              type: string
            anrede:
              type: string
              enum:
                - HERR
                - FRAU
              example: FRAU
            geburtsdatum:
              type: string
              format: date
              description: ISO-8601 Calender extended(YYYY-MM-DD) format.
              example:
                1980-12-11
            telefonnummer:
              type: string
            mobilnummer:
              type: string
            faxnummer:
              type: string
            firmenname:
              type: string
            firmennameZusatz:
              type: string
              description: Zusatz zur Firma (z.B. Abteilung)
            webseiteUrl:
              type: string
              format: uri
            Anschrift:
              $ref: '#/components/schemas/Anschrift'
            Bankverbindung:
              $ref: '#/components/schemas/Bankverbindung'
            aufsichtsbehoerde:
              type: string
            registrierungsnummer:
              type: string

    Rechte:
      title: Rechte
      type: object
      properties:
        partnermanagement:
          type: object
          description: Rechte des Partnermanagements
          properties:
            einstellungenOeffnen:
              type: boolean
              default: false
            baufiSmartEinstellungenVornehmen:
              type: boolean
              default: false
            einstellungenFuerKreditsachbearbeitungVornehmen:
              type: boolean
              default: false
              description: Mit dem Recht darf der Partner besondere Einstellungen für die Kreditsachbearbeitung vornehmen.
            einstellungenFuerProductCockpitVornehmen:
              type: boolean
              default: false
              description: Mit dem Recht darf der Partner Einstellungen an Product Cockpit vornehmen.
            partnerAnlegen:
              type: boolean
              default: false
              description: Darf Partner anlegen
        baufismart:
          type: object
          description: Rechte der BaufiSmart Oberfläche
          properties:
            baufiSmartNutzen:
              type: boolean
              default: true
            echtgeschaeft:
              type: boolean
              default: false
            einstellungenVornehmen:
              default: false
              type: boolean
            vorgaengeUeberOberflaecheAnlegen:
              type: boolean
              default: true
            ergebnisListeNutzen:
              type: boolean
              default: false
            loeschen:
              type: boolean
              default: false
              description: Darf Baufismart-Vorgänge und damit verbundende Daten löschen
            schufaAuskunftEinholen:
              type: boolean
              default: false
              description: Darf Schufa Auskunft einholen
            grundbuchUndGeodatenBestellen:
              type: boolean
              default: false
              readOnly: true
              description: Darf Grundbuch- und Geodaten bestellen (Dieses Recht kann vererbt sein, daher ReadOnly).
        kreditsmart:
          type: object
          properties:
            echtgeschaeft:
              type: boolean
              default: false
            kreditSmartSichtbar:
              type: boolean
              default: false
            versicherungAnbieten:
              type: boolean
              default: false
            vorgaengeUeberOberflaecheAnlegen:
              type: boolean
              default: false
        _links:
          $ref: '#/components/schemas/_links'

    Bankverbindung:
      title: bankverbindung
      type: object
      properties:
        referenzFeld:
          type: string
        kontoinhaber:
          type: string
        bic:
          type: string
        iban:
          type: string
          minLength: 22
          maxLength: 22
      required:
        - kontoinhaber
        - iban

    Anschrift:
      title: anschrift
      type: object
      properties:
        strasse:
          type: string
        hausnummer:
          type: string
        plz:
          type: string
          minLength: 5
          maxLength: 5
        ort:
          type: string

    Partnerkennzeichen:
      type: object
      properties:
        dslSapGeschaeftspartnerNummerFuerRatenkredit:
          type: string
        dslVertriebsWegSchluesselFuerRatenkredit:
          type: string
        dkbVertriebsIdFuerRatenkredit:
          type: string
        kennzeichenIngDiba:
          type: object
          properties:
            vermittlerNummer:
              type: string
            vermittlerVorname:
              type: string
            vermittlerNachname:
              type: string
            vermittlerNummerFuerRatenkredit:
              type: string
        kennzeichenErgo:
          type: object
          properties:
            maklerBuero:
              type: string
            bdNummer:
              type: string
        kennzeichenBhw:
          type: object
          properties:
            vgeNummer:
              type: string
            orgaNummer:
              type: string
            zurIdentifikationsPruefungLegitimiert:
              type: string
        lbsNordVermittlerNummer:
          type: string
        lbsOstVermittlerNummer:
          type: string
        lbsShhVermittlerNummer:
          type: string
        lbsSuedwestVermittlerNummer:
          type: string
        lbsWestVermittlerNummer:
          type: string
        devkVermittlerNummer:
          type: string
        wuestenrotVermittlerNummer:
          type: string
        allianzVertreterNummer:
          type: string
        axaGeschaeftsPartnerNummer:
          type: string
        dslVermittlerGruppenSchluessel:
          type: string
        bshVoNummer:
          type: string
        bshAkquisitionsWeg:
          type: string
        bshBlzVertriebsbank:
          type: string
        wlBankVermittlerNummer:
          type: string
        naevVermittlerNummer:
          type: string
        rUndvBankAgenturNummer:
          type: string
        rUndvBlzVertriebsbank:
          type: string
        bausparkasseMainzVermittlerNummer:
          type: string
        deutscherRingVermittlerNummer:
          type: string
        alteLeipzigerVerbundVermittlerNummer:
          type: string
        signalIdunaBetreuerNummer:
          type: string
        signalIdunaFilialDirektionNummer:
          type: string
        hanseaticVertriebsPartnerNummer:
          type: string
        commerzbankVermittlerNummer:
          type: string
        partnerKennzeichenDerVertriebsOrganisation:
          type: object
          properties:
            _links:
              title: _links
              type: object
              properties:
                partner:
                  $ref: '#/components/schemas/Link'
        _links:
          $ref: '#/components/schemas/_links'

    _links:
      title: _links
      type: object
      properties:
        self:
          $ref: '#/components/schemas/Link'
        rechte:
          $ref: '#/components/schemas/Link'
        untergeordnetePartner:
          $ref: '#/components/schemas/Link'
        partnerkennzeichen:
          $ref: '#/components/schemas/Link'
        administrierbare:
          $ref: '#/components/schemas/Link'
        uebernahmeRechtFuer:
          $ref: '#/components/schemas/Link'
      description: 'Additional HAL link relations to other resources'
      required:
        - self

    Link:
      type: object
      format: uri
      required:
        - href
      properties:
        href:
          type: string
          format: uri

