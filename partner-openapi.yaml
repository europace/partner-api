openapi: 3.0.3
tags:
  - name: partner
  - name: permissions
info:
  title: partner-api
  version: v2.0
  description: Europaces partner management allows organizations to map their own structure to give each partner or employee access and set rights.
  contact:
    name: Europace AG
    url: 'https://docs.api.europace.de'
    email: info@europace.de
  termsOfService: 'https://docs.api.europace.de/nutzungsbedingungen/'
servers:
  - url: 'https://api.europace.de/v2'
    description: Produktion Server
externalDocs:
  url: 'https://docs.api.europace.de/baufinanzierung/partner/partner-api/'
paths:
  '/partner/{partnerId}':
    parameters:
      - schema:
          type: string
        name: partnerId
        in: path
        required: true
        description: unique identifier of the partner
    get:
      summary: get partner data
      operationId: getPartner
      description: |
        Provides the data of a partner.

        Requirements:
        * OAuth token has scope `partner:plakette:lesen`.
        * To access a partner, the caller basically needs permission to see it. This right exists if the retrieved partner is below the authenticated partner in the hierarchy or the Einstellungsrecht is assigned to the authenticated partner.
      security:
        - europace_oauth2:
            - 'partner:plakette:lesen'
      responses:
        '200':
          description: |
            Different data structures are supplied depending on the type (person, organization).

            **Inherited values are therefore not delivered.** The inheritance of values of certain attributes along thehierarchy, which is known from the settings-frontend, is not reflected in the API. 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partner'
              examples:
                Partner:
                  value:
                    partnerId: SZY92
                    vorname: Max
                    nachname: Musterman
                    typ: PERSON
                    email: community@europace2.de
                    webseite: 'https://www.europace2.de'
                    avatar: 'https://www.europace2.de/partnermanagement/984094aa488a4dd8e3273c4b898fe63e.avatar?id=4ff189174ad2e9f19178073b'
                    gesperrt: false
                    parent:
                      partnerId: WER03
                    telefonnummer: (030) 12345678
                    firmenname: Firma
                    anschrift:
                      strasse: Heidestraße
                      hausnummer: '8'
                      plz: '10557'
                      ort: Berlin
                    bankverbindung:
                      kontoinhaber: Immofin GmbH
                      bic: PBNKDEFFXXX
                      iban: DE94370100500040661506
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found - partner is not present or may not be accessed.
      tags:
        - Partner
      parameters: []
    patch:
      summary: update partner data
      operationId: updatePartner
      description: |
        update partner data

        This overwrites **only** those attributes that are included in the PATCH request. All other attributes are not changed.

        Requirements:
        * OAuth token has the scope `partner:plakette:schreiben`.
        * Caller has Einstellungsrechte on the partner

        ### Attributes that can be changed via PATCH
        - anrede
        - anschrift
        - aufsichtsbehoerde
        - bankverbindung
        - email
        - externePartnerId
        - faxnummer
        - firmenname
        - firmennameZusatz
        - geburtsdatum
        - kreditsachbearbeiter
        - mobilnummer
        - name
        - vorname
        - nachname
        - registrierungsnummer
        - telefonnummer
        - titelFunktion
        - webseite
      responses:
        '200':
          description: |-
            Partner has been updated.

            The body of the response contains the current partner data in JSON format. This can be used for success control. Attributes that are set on the server side or for which there are default values are always included.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partner'
              examples:
                example-1:
                  value:
                    partnerId: ABC12
                    vorname: Max
                    nachname: Mustermann
                    typ: PERSON
                    email: max.musterman@example.org
                    avatar: 'https://ep2.mtp.rz-hypoport.local/partnermanagement/d71c58aeaed4022384b169f83e0d8842.avatar?anonymousAvatar=BENUTZER'
                    gesperrt: false
                    kreditsachbearbeiter: true
                    parent:
                      partnerId: ABC12
                    externePartnerId: '123456'
                    titelFunktion: Softwareentwickler
                    anrede: HERR
                    geburtsdatum: '1970-01-01'
                    telefonnummer: 030 123456
                    mobilnummer: 030 123456
                    faxnummer: 030 123456
                    firmenname: Europace AG
                    firmennameZusatz: Aktiengesellschaft
                    webseite: 'https://github.com/europace/partner-api'
                    anschrift:
                      strasse: Musterstraße
                      hausnummer: '5'
                      plz: '12345'
                      ort: Musterstadt
                    bankverbindung:
                      referenzFeld: Test Ref
                      kontoinhaber: Max Musterman
                      bic: BYLADEM1001
                      iban: DE02120300000000202051
                    aufsichtsbehoerde: Musterbehoerde
                    registrierungsnummer: '987654'
        '400':
          description: Bad Request - Validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Beispiel:
                  value:
                    message: 'Enum literal für ''anrede'' muss FRAU oder HERR sein.: abc'
                    traceId: ' ff-request-2014-10-01-07-55'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found - partner is not present or may not be accessed.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Partner'
            examples:
              example-1:
                value:
                  anrede: HERR
                  vorname: Max
                  nachname: Mustermann
                  email: max.musterman@example.org
                  gesperrt: false
                  kreditsachbearbeiter: true
                  externePartnerId: '123456'
                  titelFunktion: Softwareentwickler
                  geburtsdatum: '1970-01-01'
                  telefonnummer: 030 123456
                  mobilnummer: 030 123456
                  faxnummer: 030 123456
                  firmenname: Europace AG
                  firmennameZusatz: Aktiengesellschaft
                  webseite: 'https://github.com/europace/partner-api'
                  anschrift:
                    strasse: Musterstraße
                    hausnummer: '5'
                    plz: '12345'
                    ort: Musterstadt
                  bankverbindung:
                    kontoinhaber: Max Musterman
                    bic: BYLADEM1001
                    iban: DE02120300000000202051
                    referenzFeld: Test Ref
                  aufsichtsbehoerde: Musterbehoerde
                  registrierungsnummer: '987654'
        description: |-
          You only need to give the attributes, who have to change.

          The following rules apply to server-side evaluation:

          - empty attributes for strings ("") delete the existing value.
          - unknown attributes are ignored.
          - `partnerId` cannot be changed and will be ignored.
          - `type` is not changeable and will be ignored.
          - if a field expects an ENUM, a value must be specified (Anrede)
      security:
        - europace_oauth2:
            - 'partner:plakette:schreiben'
      tags:
        - Partner
  '/partner/{partnerId}/kontaktdaten':
    get:
      summary: get contact details
      operationId: getKontaktdaten
      description: |
        Provides the contact details of a partner if you have access to him or a trade relationship.

        The contact details of partners are provided in order to be able to work together.

        Requirements:
        * the caller has a trading relationship with the partner
        and/or
        * the caller has an [Zugriffsrecht](https://docs.api.europace.de/common/glossary/) to the partner
        and/or
        * the caller has a [Einstellungsrecht](https://docs.api.europace.de/common/glossary/) to the partner
        and/or
        * the caller is above the partner in the hierarchy
      tags:
        - Partner
      responses:
        '200':
          description: Retrieve the contact details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Kontaktdaten'
              examples:
                Person:
                  value:
                    person:
                      anrede: FRAU
                      vorname: Maxi
                      nachname: Musterfrau
                      titelFunktion: Baufi-Beraterin
                      geburtsdatum: '1995-05-05'
                    firmenName: Immofin AG
                    telefon: 030-12345-0
                    mobiltelefon: 0151-12345678
                    email: maxi.musterfrau@immofin.de
                    anschrift:
                      strasse: Teststr.
                      hausnummer: '69'
                      plz: '10557'
                      ort: Berlin
                    Paragraph34c:
                      registrierungsNummer: D-W-7943497238942
                      aufsichtsBehörde: 'IHK Berlin, Fasanenstr. 85, 10623 Berlin'
        '401':
          description: Unauthorized - Not signed in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden - No access right or trading relationship with the partner
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found - partner does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    parameters:
      - schema:
          type: string
        name: partnerId
        in: path
        required: true
        description: unique identifier of the partner
  '/partner/{partnerId}/rechte':
    parameters:
      - schema:
          type: string
        name: partnerId
        in: path
        required: true
        description: unique identifier of the partner
    get:
      summary: get user permissions
      operationId: getPartnerRechte
      description: |-
        Provides the permissions of a user.

        Requirements:
        * OAuth token has scope partner:plakette:lesen
        * To access a partner, the caller basically needs permission to see it. This right exists if the retrieved partner is below the authenticated partner in the hierarchy or the Einstellungsrecht is assigned to the authenticated partner.
      security:
        - europace_oauth2:
            - 'partner:rechte:lesen'
      tags:
        - Partner
        - Rechte
      responses:
        '200':
          description: You will get the permissions of the partner.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rechte'
              examples:
                example-1:
                  value:
                    partnermanagement:
                      apiClientEinstellungenVornehmen: false
                      einstellungenOeffnen: false
                      baufiSmartEinstellungenVornehmen: false
                      partnerAnlegen: false
                    baufismart:
                      baufiSmartNutzen: true
                      echtgeschaeft: false
                      vorgaengeUeberOberflaecheAnlegen: true
                      ergebnisListeNutzen: false
                      loeschen: false
                    kreditsmart:
                      echtgeschaeft: false
                      kreditSmartSichtbar: false
                      versicherungAnbieten: false
                      vorgaengeUeberOberflaecheAnlegen: false
        '401':
          description: Unauthorized - not signed in
        '403':
          description: Forbidden - no access
        '404':
          description: Not found - partner does not exist
    patch:
      summary: set user permissions
      operationId: setPartnerRecht
      description: |-
        Update permissions of a user.

        Requirements:
        * OAuth token has the scope `partner:rechte:schreiben`.
        * Caller has a [Einstellungsrecht](https://docs.api.europace.de/common/glossary/) on the partner
      security:
        - europace_oauth2:
            - 'partner:rechte:schreiben'
      tags:
        - Partner
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rechte'
            examples:
              example-1:
                value:
                  baufismart:
                    baufiSmartNutzen: true
                    echtgeschaeft: true
        description: |
          This overwrites **only** those attributes that are included in the PATCH request. All other attributes are notchanged.
      responses:
        '200':
          description: |-
            The changed permissions of a partner are returned.

            The body of the response contains the current partner data in JSON format.
            This can be used for success control. Attributes that were already set or for which there are default values are always included.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rechte'
              examples:
                example-1:
                  value:
                    partnermanagement:
                      apiClientEinstellungenVornehmen: true
                      einstellungenOeffnen: true
                      baufiSmartEinstellungenVornehmen: true
                      partnerAnlegen: true
                    baufismart:
                      baufiSmartNutzen: true
                      echtgeschaeft: true
                      vorgaengeUeberOberflaecheAnlegen: true
                      ergebnisListeNutzen: true
                      loeschen: false
                    kreditsmart:
                      echtgeschaeft: true
                      kreditSmartSichtbar: true
                      versicherungAnbieten: true
                      vorgaengeUeberOberflaecheAnlegen: true
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Partner ist nicht vorhanden oder es darf nicht auf ihn zugegriffen werden.
  '/partner/{partnerId}/untergeordnete':
    parameters:
      - schema:
          type: string
        name: partnerId
        in: path
        required: true
        description: ID des Partners
    post:
      summary: create partner
      operationId: createPartner
      description: |-
        Creates a new partner as an organization or person, depending on the type.

        Creating a new partner is always done below an existing partner:
        `https://api.europace.de/v2/partner/{PartnerId}/untergeordnete`

        Requirements:
        * OAuth token has scope `partner:plakette:anlegen`.
        * Caller is a partner of type Person
        * Caller has the `may create organizational units` permission. 
        * Caller has [Einstellungsrechte](https://docs.api.europace.de/common/glossary/) on the partner under which the new partner is to be created

        The following rules apply to server-side evaluation:

        - unknown attributes are ignored.
        - For organizations, person-specific attributes are ignored.
        - For persons, organization-specific attributes are ignored.
        - Empty attributes for strings ("") are ignored.
        - "partnerId" cannot be set and will be ignored.
        - Rights are set to false for persons if not specified.

        > **Note**
        > 
        > For a successful offer acceptance in BaufiSmart it is necessary for the following processes that the following attributes are maintained in the partner management for the account manager of the transaction:
        > - anrede
        > - vorname
        > - nachname
        > - anschrift
        > - bankverbindung
        > - email
      security:
        - europace_oauth2:
            - 'partner:plakette:anlegen'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Partner'
            examples:
              Person:
                value:
                  anrede: HERR
                  vorname: Max
                  nachname: Mustermann
                  email: max.musterman@example.org
                  gesperrt: false
                  kreditsachbearbeiter: true
                  externePartnerId: '123456'
                  titelFunktion: Softwareentwickler
                  geburtsdatum: '1970-01-01'
                  telefonnummer: 030 123456
                  mobilnummer: 030 123456
                  faxnummer: 030 123456
                  firmenname: Europace AG
                  firmennameZusatz: Aktiengesellschaft
                  webseite: 'https://github.com/europace/partner-api'
                  anschrift:
                    strasse: Musterstraße
                    hausnummer: '5'
                    plz: '12345'
                    ort: Musterstadt
                  bankverbindung:
                    kontoinhaber: Max Musterman
                    bic: BYLADEM1001
                    iban: DE02120300000000202051
                    referenzFeld: Test Ref
                  aufsichtsbehoerde: Musterbehoerde
                  registrierungsnummer: '987654'
        description: |-
          The following rules apply to server-side evaluation:

          - unknown attributes are ignored.
          - For organizations, person-specific attributes are ignored.
          - For persons, organization-specific attributes are ignored.
          - Empty attributes for strings ("") are ignored.
          - "partnerId" cannot be set and will be ignored.
          - Rights are set to false for persons if not specified.
      tags:
        - Partner
      responses:
        '201':
          description: |-
            Partner created.

            The body of the response contains the current master data in JSON format.
            This can be used for success control. Attributes that are set on the server side or for which there are default values are always included.

            The HTTP header "Location" contains the url of the newly created partner.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partner'
              examples:
                Person:
                  value:
                    partnerId: SZY92
                    typ: PERSON
                    avatar: 'https://www.europace2.de/partnermanagement/984094aa488a4dd8e3273c4b898fe63e.avatar?id=4ff189174ad2e9f19178073b'
                    parent:
                      partnerId: WER03
                    anrede: HERR
                    vorname: Max
                    nachname: Mustermann
                    email: max.musterman@example.org
                    gesperrt: false
                    kreditsachbearbeiter: true
                    externePartnerId: '123456'
                    titelFunktion: Softwareentwickler
                    geburtsdatum: '1970-01-01'
                    telefonnummer: 030 123456
                    mobilnummer: 030 123456
                    faxnummer: 030 123456
                    firmenname: Europace AG
                    firmennameZusatz: Aktiengesellschaft
                    webseite: 'https://github.com/europace/partner-api'
                    anschrift:
                      strasse: Musterstraße
                      hausnummer: '5'
                      plz: '12345'
                      ort: Musterstadt
                    bankverbindung:
                      kontoinhaber: Max Musterman
                      bic: BYLADEM1001
                      iban: DE02120300000000202051
                      referenzFeld: Test Ref
                    aufsichtsbehoerde: Musterbehoerde
                    registrierungsnummer: '987654'
          headers:
            Location:
              schema:
                type: string
              description: 'Link auf den neu angelegten Partner '
        '205':
          description: Partner could be found by PartnerId or external PartnerId and was updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partner'
          headers:
            Location:
              schema:
                type: string
              description: Link auf den gefundenen und aktualsierten Partner
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - see requirements
    get:
      summary: get subordinate partners
      operationId: getChildren
      description: Returns a list of child partners.
      security:
        - europace_oauth2:
            - 'partner:plakette:lesen'
      responses:
        '200':
          description: List of subordinate partners.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Plakette'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      tags:
        - Partner
        - Rechte
  '/partner/{partnerId}/partnerkennzeichen':
    parameters:
      - schema:
          type: string
        name: partnerId
        in: path
        required: true
        description: ID des Partners
    get:
      summary: get partner code
      operationId: getPartnerkennzeichen
      description: |-
        The partner codes identify a sales organisation at a loan provider. The recorded values can be read out with this endpoint. The specific value for a loan provider will be delivered in the Antraege-API to him. This endpoint is for managing purpose.

        Requirements:
        * OAuth token has scope `partner:plakette:lesen `
        * To access a partner, the caller basically needs permission to see it. This right exists if the retrieved partner is below the authenticated partner in the hierarchy or the Einstellungsrecht is assigned to the authenticated partner.
      security:
        - europace_oauth2:
            - 'partner:plakette:lesen'
      tags:
        - Partner
      responses:
        '200':
          description: |-
            List with partner codes.

            **Inherited values are therefore not delivered.** The inheritance of values of certain attributes along the hierarchy, which is known from the settings, is not reflected in the API. 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partnerkennzeichen'
              examples:
                Beispiel:
                  value:
                    dslSapGeschaeftspartnerNummerFuerRatenkredit: cdts-dsl-sap-vo
                    dslVertriebsWegSchluesselFuerRatenkredit: '1899026629'
                    dkbVertriebsIdFuerRatenkredit: cdts-dkb-vertrieb
                    kennzeichenIngDiba:
                      vermittlerNummer: '9800002186'
                      vermittlerVorname: wer
                      vermittlerNachname: wer
                      vermittlerNummerFuerRatenkredit: cdts-ing-diba-vermittler
                    kennzeichenErgo: {}
                    kennzeichenBhw:
                      vgeNummer: 6248/205585.0
                      orgaNummer: ORGA123
                      zurIdentifikationsPruefungLegitimiert: 'false'
                    lbsOstVermittlerNummer: lbsost-werwer-vermittler
                    lbsShhVermittlerNummer: lbs-ssh-ldapvermittler
                    lbsSuedwestVermittlerNummer: lbs-südwest-ldapvermittler
                    lbsWestVermittlerNummer: lbs-west-ldapvermittler
                    allianzVertreterNummer: 01/012/0123
                    axaGeschaeftsPartnerNummer: MA 00352
                    dslVermittlerGruppenSchluessel: '1200'
                    bshVoNummer: abcdefghijklmnopqrstuvwxyz
                    bshAkquisitionsWeg: AW1
                    bshBlzVertriebsbank: '1234567890'
                    dzHypVermittlerNummer: '1234'
                    alteLeipzigerVerbundVermittlerNummer: '42'
                    rundvBankAgenturNummer: RV_BAN
                    rundvBlzVertriebsbank: RV_BLZ
                    vertriebsOrganisation:
                      name: "Vertriebsorganisation Name"
                      firma: "Vertriebsorganisation Firma"
                      vertriebsOrganisationsId: "VORGAID"
                      partnerId: "ABC12"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/partner/{partnerId}/administrierbare':
    parameters:
      - in: path
        name: partnerId
        schema:
          type: string
        required: true
        description: ID des Partners
    get:
      summary: get setting right
      operationId: getAdministrierbare
      tags:
        - Partner
        - Rechte
      description: |-
        Returns all partners for which this partner is allowed to change the data and authorizations or retrieve the reporting.

        At least the partner itself is returned, since everyone may at least set itself or retrieve its own reporting.

        In order to achieve a better performance, the implicitly administrable partners have been omitted in the partner-api. To determine these, it is necessary to iterate over the subordinates of the result list.

        Requirements:
        * OAuth token has scope `partner:plakette:lesen`.
        * Each partner may make changes to himself or other partners if he has the [Einstellungsrecht](https://docs.api.europace.de/common/glossary/). This means that partner data or authorizations can be adjusted. Authorizations can only be assigned if the executing partner has them himself.
      security:
        - europace_oauth2:
            - 'partner:beziehungen:lesen'
      responses:
        '200':
          description: List of all partners where this partner is allowed to change the data and authorizations or to retrieve the reporting.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentPartnerIds'
              examples:
                example-1:
                  value:
                    content:
                      - partnerId: XYZ15
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/partner/{partnerId}/uebernehmbare':
    parameters:
      - name: partnerId
        description: ID des Partners
        in: path
        required: true
        schema:
          type: string
    get:
      summary: get access rights
      operationId: getUebernehmbare
      tags:
        - Partner
        - Rechte
      description: |-
        The [Zugriffrecht](https://docs.api.europace.de/common/glossary/) entitles partners to read and write access to all [Vorgänge](https://docs.api.europace.de/common/glossary/) of another partner.

        In order to achieve better performance, the partner-api does not output the implicitly acceptable ones. To determine these, it is necessary to iterate over the subordinates of the result list.

        * OAuth token has scope `partner:rechte:lesen `
        * To access a partner, the caller basically needs permission to see it. This right exists if the retrieved partner is below the authenticated partner in the hierarchy or the Einstellungsrecht is assigned to the authenticated partner.
      security:
        - europace_oauth2:
            - 'partner:beziehungen:lesen'
      responses:
        '200':
          description: 'List of all partners whose cases can be seen, opened and edited by the partner (access). '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentPartnerIds'
              examples:
                example-1:
                  value:
                    content:
                      - partnerId: XYZ15
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/partner/{partnerId}/uebernahmeRechtFuer/{target}':
    parameters:
      - schema:
          type: string
        name: partnerId
        in: path
        required: true
        description: 'Partner, dessen Zugriffrechte ermittelt werden sollen'
      - schema:
          type: string
        name: target
        in: path
        required: true
        description: 'Partner, auf den zugegriffenen werden soll'
    get:
      summary: check access right
      operationId: getUebernahmeRechtFuer
      tags:
        - Partner
        - Rechte
      description: |-
        Determines whether the partner is allowed to access the operations of another partner.
        Do I have access to Partner XYZ15?

        The [Zugriffrecht](https://docs.api.europace.de/common/glossary/) entitles partners to read and write access to all [Vorgänge](https://docs.api.europace.de/common/glossary/) of another partner.
      security:
        - europace_oauth2:
            - 'partner:beziehungen:lesen'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: Target
                type: object
                properties:
                  partner:
                    $ref: '#/components/schemas/Plakette'
                  uebernehmbar:
                    type: boolean
                    description: 'Kann auf die Vorgänge des Partner zugegriffen werden? '
              examples:
                Beispiel:
                  value:
                    partner:
                      partnerId: AAV43
                      gesperrt: false
                    uebernehmbar: true
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      summary: add access right
      operationId: setUebernahmeRechtFuer
      tags:
        - Partner
        - Rechte
      description: |
        Creates an access right to a partner.

        Example: partner ABC12 is getting the [Zugriffsrecht](https://docs.api.europace.de/common/glossary/) from XYZ56. ABC12 can then access the [Vorgänge](https://docs.api.europace.de/common/glossary/) of XYZ56.

        Requirements:
        * OAuth token has scope `partner:beziehung:schreiben`.
        * Caller has Einstellungsrecht on the partner to which the Zugriffsrecht is added 
        * Caller has Einstellungsrecht on the partner to which the access is granted
      security:
        - europace_oauth2:
            - 'partner:beziehungen:schreiben'
      responses:
        '201':
          description: Created
        '401':
          description: Unauthorized - AccessToken invalid
        '403':
          description: 'Forbidden - Einstellungsrecht on partner-id or scope ''partner:beziehung:schreiben'' not available'
        '404':
          description: Not Found - PartnerId or target were not found
  '/partner/{partnerId}/zugang':
    parameters:
      - in: path
        name: partnerId
        schema:
          type: string
        required: true
        description: ID des Partners
    get:
      summary: get user access
      tags:
        - Partner
      security:
        - europace_oauth2:
            - 'partner:plakette:lesen'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Zugang'
              examples:
                'Example response, for a partner authenticating to the Europace identity ':
                  value:
                    partnerId: ABC12
                    status: ZUGANG_REGISTRIERT
                    benutzername: maxi.musterman@example.org
                'Example response, for a partner authenticating with its own identity provider (e.g. Actice Directory)':
                  value:
                    partnerId: ABC12
                    status: ZUGANG_REGISTRIERT
                    identityProviderBenutzername: maxi.muster
                    identityProviderConfigURL: 'https://auth.deineOrganisation.de/adfs/.well-known/openid-configuration'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - no access
        '404':
          description: Not Found - partner does not exists
      operationId: getZugang
      description: |-
        Delivers the user access of a partner. 
        In the case of a person, the usernames are supplied. 
        In the case of an organization, the identity provider configuration are supplied.

        Requirements:
        * OAuth token has scope `partner:plakette:lesen`
        * To access a partner, the caller basically needs permission to see it. This right exists if the retrieved partner is below the authenticated partner in the hierarchy or the Einstellungsrecht is assigned to the authenticated partner.
    post:
      summary: create user access
      tags:
        - partner
      operationId: createZugang
      security:
        - europace_oauth2:
            - 'partner:plakette:schreiben'
      parameters:
        - in: query
          name: sendEmail
          schema:
            type: boolean
            default: false
          required: false
          example: true
          description: 'If the benutzername is set, an email will be sent to the benutzername instructing him/her to assign a password.'
      responses:
        '201':
          description: |-
            User access has been created.

            The body of the response contains the current access data in JSON format. This can be used for success control. Attributes that are set on the server side are always included.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Zugang'
              examples:
                'Use case 1:':
                  value:
                    partnerId: ABC12
                    status: ZUGANG_UNBESTAETIGT
                    benutzername: maxi.musterman@example.org
                'Use case 2:':
                  value:
                    partnerId: ABC12
                    status: ZUGANG_REGISTRIERT
                    benutzername: maxi.musterman@deineOrganisation.de
                    identityProviderConfigURL: 'https://idp.deineOrganisation.de/auth/realms/.well-known/openid-configuration'
                'Use case 3:':
                  value:
                    partnerId: ABC12
                    status: ZUGANG_REGISTRIERT
                    identityProviderBenutzername: maxi.mustermann01
                    identityProviderConfigURL: 'https://idp.deineOrganisation.de/auth/realms/.well-known/openid-configuration'
        '400':
          description: Bad Request - Request invalid
        '401':
          description: Unauthorized
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                usernameNotAllowed:
                  value:
                    message: Username not allowed
                    statusCode: 406
                    statusMessage: Dieser Benutzername existiert bereits in Europace
                    timestamp: '2021-01-20T10:03:29.02'
                    traceId: XABC-2333...
                alreadyExists:
                  value:
                    message: Already Exists
                    statusCode: 406
                    statusMessage: Es existiert bereits ein Zugang
                    timestamp: '2021-01-20T10:03:29.02'
                    traceId: XABC-2333...
                wrongPartnerType:
                  value:
                    message: wrongPartnerType
                    statusCode: 406
                    statusMessage: Ein Zugang kann nur an einer Person nicht einer Organisation angelegt werden.
                    timestamp: '2021-01-20T10:03:29.02'
                    traceId: XABC-122...
        '409':
          description: Conflict - benutzername already exists
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              title: CreateZugang
              properties:
                benutzername:
                  type: string
                  example: max.mustermann@email.de
                  format: email
                  description: 'Eine in Europace eindeutige Emailadresse, die als Identifikation des Benutzers verwendet wird. '
                identityProviderBenutzername:
                  type: string
                  description: Benutzername für den IdentityProvider. Die Eindeutigkeit ist nicht relevant. Ist das Feld <null> wird der Benutzername für den Identity Provider verwendet.
            examples:
              'Use case 1: Create Europace user':
                value:
                  benutzername: maxi.musterman@example.org
              'Use case 2: Create user for own identity provider':
                value:
                  benutzername: maxi.musterman@deineOrganisation.de
              'Use case 3: Username is not unique Europace-wide or no email address ':
                value:
                  identityProviderBenutzername: maxi.mustermann01
        description: ''
      description: |-
        Creates an user access for a person.

        A newly created partner needs a [Zugang](https://docs.api.europace.de/common/glossary/) to be able to log in to Europace with username. The Zugang can be created by the settings-frontend (Einstellungen) or the partner-API.

        Requirements for all use cases and examples:
        * OAuth token has scope `partner:plakette:schreiben`
        * To access a partner, the caller basically needs permission to see it. This right exists if the retrieved partner is below the authenticated partner in the hierarchy or the Einstellungsrecht is assigned to the authenticated partner.

        #### Use case 1: Create Europace user.
        The user with the PartnerId:ABC12 is set up an Zugang with the username "max.musterman@example.org" and an activation email (`sendEmail=true`) is sent to the username. In the activation email, the user is prompted to set a password.

        >Note: \
        >The reply address in the activation email is the email or username of the subject in the access-token that created the Zugang.
        >If no email address or username is available, the reply goes to noreply@europace2.de.

        Requirement for use case 1:
        * the username is Europace-wide unique
        * the username is an e-mail address

        #### Use case 2: Create user for own identity provider.
        This use case is most common with banking partners or direct sales organizations where allemployees have a company email with their own domain and the employees work exclusively within this organization.

        In this use case, the partner's identity provider is configured and the username is used as the user identifier at Europace and the partner's identity provider.

        Don't send an activation email (`sendEmail=false`), because the user already exists in the partner's Identity Provider.

        Requirement for use case 2:
        * the username is Europace-wide unique
        * the username is an e-mail address

        #### Use case 3: Username is not unique Europace-wide or no email address 
        A user:in is to be created for the own Identity Provider, but the username is Europace-wide not unique or no e-mail address. In this case the field 'benutzername' is not used at all, but only the field 'identityProviderBenutzername'. The identification of the user on the login mask can only be done via a `partnerId`. The `partnerId` can be passed to the login mask with the `username` parameter in some use cases to improve the user experience.

        Since it is an existing user in the identity provider of the partner and the identityProvider username is only used here, no activation email is sent, regardless of the `sendEmail` parameter.

        Requirements for use case 3:
        * No further
    patch:
      summary: Zugang bearbeiten
      tags:
        - Partner
      operationId: patchZugang
      parameters:
        - in: query
          name: sendEmail
          schema:
            type: boolean
            default: false
          required: false
          example: true
          description: 'Wenn der Benutzername gesetzt ist, wird eine E-Mail an den Benutzernamen gesendet, um die Aktion zu bestätigen.'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Zugang'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - kein Zugriff
        '404':
          description: Not Found - partner nicht gefunden
      description: |-
        The [Benutzernamen](https://docs.api.europace.de/common/glossary/) of external identity providers can be changed with Partner API.

        Restriction:
        * the field `benutzername` cannot be changed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              title: PatchZugang
              properties:
                benutzername:
                  type: string
                  example: max.mustermann@email.de
                  format: email
                  description: 'Eine in Europace eindeutige Emailadresse, die als Identifikation des Benutzers verwendet wird. '
                identityProviderBenutzername:
                  type: string
                  description: Benutzername für den IdentityProvider. Die Eindeutigkeit ist nicht relevant. Ist das Feld <null> wird der Benutzername für den Identity Provider verwendet.
                  example: max.mustermann
            examples:
              IdP-Benutzernamen ändern:
                value:
                  identityProviderBenutzername: maxi.muster
        description: ''
components:
  securitySchemes:
    europace_oauth2:
      type: http
      scheme: bearer
      description: ''
  schemas:
    PartnerId:
      type: object
      properties:
        partnerId:
          type: string
          description: unique europace partner identifier (readonly)
          minLength: 5
          readOnly: true
    Kontaktdaten:
      title: Kontaktdaten
      type: object
      description: Business card of the partner for trading partners
      properties:
        person:
          $ref: '#/components/schemas/Person'
        organisation:
          $ref: '#/components/schemas/Organisation'
        firmenName:
          type: string
          description: company name
        firmenNameZusatz:
          type: string
          description: additional legal info
        telefon:
          type: string
          description: phone
        fax:
          type: string
        mobiltelefon:
          type: string
          description: mobilphone
        email:
          type: string
        website:
          type: string
        anschrift:
          $ref: '#/components/schemas/Anschrift'
        Paragraph34c:
          $ref: '#/components/schemas/Paragraph34c'
    Plakette:
      type: object
      description: tree-element of organisational structure
      properties:
        partnerId:
          type: string
          description: unique europace partner identifier (read only)
          minLength: 5
          readOnly: true
        vorname:
          type: string
          description: firstname
        nachname:
          type: string
          description: surname
        name:
          type: string
        typ:
          $ref: '#/components/schemas/Typ'
        email:
          type: string
          format: email
          example: john.doe@example.org
        avatar:
          type: string
          format: uri
          readOnly: true
        gesperrt:
          type: boolean
          default: false
          description: locked. True if the partner or a parent partner is locked.
        kreditsachbearbeiter:
          type: boolean
    Partner:
      title: Partner
      allOf:
        - $ref: '#/components/schemas/Plakette'
        - type: object
          properties:
            parent:
              title: parent
              allOf:
                - $ref: '#/components/schemas/PartnerId'
            externePartnerId:
              type: string
              description: Any externally generated Id. E.g. SAP or CRM number.
            titelFunktion:
              type: string
              description: title
            anrede:
              type: string
              enum:
                - HERR
                - FRAU
              example: FRAU
              description: gender
            geburtsdatum:
              type: string
              format: date
              description: 'birthday, ISO-8601 Calender extended(YYYY-MM-DD) format.'
              example: '1980-12-11'
            telefonnummer:
              type: string
              description: phonenumber
            mobilnummer:
              type: string
              description: mobilphone-number
            faxnummer:
              type: string
              description: fax machine
            firmenname:
              type: string
              description: company name
            firmennameZusatz:
              type: string
              description: Addition to the company (e.g. department)
            webseite:
              type: string
              format: uri
            anschrift:
              $ref: '#/components/schemas/Anschrift'
            bankverbindung:
              $ref: '#/components/schemas/Bankverbindung'
            aufsichtsbehoerde:
              type: string
              description: supervisor authority
            registrierungsnummer:
              type: string
              description: supervisor auth register number
    Rechte:
      title: Rechte
      type: object
      description: user permissions
      properties:
        partnermanagement:
          type: object
          description: permissions for settings
          properties:
            apiClientEinstellungenVornehmen:
              type: boolean
              default: false
              description: Allow to make API client settings
            einstellungenOeffnen:
              type: boolean
              default: false
              description: Allow to open the settings-frontend
            baufiSmartEinstellungenVornehmen:
              type: boolean
              default: false
              description: Allow to make changes on baufiSmart
            partnerAnlegen:
              type: boolean
              default: false
              description: Allow to create partners
        baufismart:
          type: object
          description: BaufiSmart permissions
          properties:
            baufiSmartNutzen:
              type: boolean
              default: true
              description: Allow to use BaufiSmart
            echtgeschaeft:
              type: boolean
              default: false
              description: 'Allow to use production-mode, not only test-mode'
            vorgaengeUeberOberflaecheAnlegen:
              type: boolean
              default: true
              description: Allow to create BaufiSmart cases with UI
            ergebnisListeNutzen:
              type: boolean
              default: false
              description: Allow to use offer-listings in BaufiSmart
            loeschen:
              type: boolean
              default: false
              description: Allow to delete BaufiSmart cases and related data
        kreditsmart:
          type: object
          description: KreditSmart permissions
          properties:
            echtgeschaeft:
              type: boolean
              default: false
              description: 'Allow to use production-mode, not only test-mode'
            kreditSmartSichtbar:
              type: boolean
              default: false
              description: Allow to use KreditSmart
            versicherungAnbieten:
              type: boolean
              default: false
              description: Allow to offer insurances
            vorgaengeUeberOberflaecheAnlegen:
              type: boolean
              default: false
              description: Allow to create KreditSmart cases with UI
    Bankverbindung:
      title: bankverbindung
      type: object
      description: bank account
      properties:
        referenzFeld:
          type: string
          description: reference for payee
        kontoinhaber:
          type: string
          description: account owner
        bic:
          type: string
          pattern: '(^.{0}$|[A-Z,0-9]{11,11})'
        iban:
          type: string
          minLength: 22
          maxLength: 22
    Anschrift:
      title: anschrift
      type: object
      description: adress
      properties:
        strasse:
          type: string
          description: street
        hausnummer:
          type: string
          description: housenumber
        plz:
          type: string
          minLength: 5
          maxLength: 5
          description: zipcode
        ort:
          type: string
          description: 'town, location'
    ContentPartnerIds:
      title: content
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/PartnerId'
        next:
          type: string
          description: 'Optional, present if next page exist.'
        prev:
          type: string
          description: 'Optional, present if previous page exist.'
    Partnerkennzeichen:
      type: object
      properties:
        dslSapGeschaeftspartnerNummerFuerRatenkredit:
          type: string
        dslVertriebsWegSchluesselFuerRatenkredit:
          type: string
        dkbVertriebsIdFuerRatenkredit:
          type: string
        kennzeichenIngDiba:
          type: object
          properties:
            vermittlerNummer:
              type: string
            vermittlerVorname:
              type: string
            vermittlerNachname:
              type: string
            vermittlerNummerFuerRatenkredit:
              type: string
        kennzeichenErgo:
          type: object
          properties:
            maklerBuero:
              type: string
            bdNummer:
              type: string
        kennzeichenBhw:
          type: object
          properties:
            vgeNummer:
              type: string
            orgaNummer:
              type: string
            zurIdentifikationsPruefungLegitimiert:
              type: string
        lbsNordVermittlerNummer:
          type: string
        lbsOstVermittlerNummer:
          type: string
        lbsShhVermittlerNummer:
          type: string
        lbsSuedwestVermittlerNummer:
          type: string
        lbsWestVermittlerNummer:
          type: string
        devkVermittlerNummer:
          type: string
        wuestenrotVermittlerNummer:
          type: string
        allianzVertreterNummer:
          type: string
        axaGeschaeftsPartnerNummer:
          type: string
        dslVermittlerGruppenSchluessel:
          type: string
        bshVoNummer:
          type: string
        bshAkquisitionsWeg:
          type: string
        bshBlzVertriebsbank:
          type: string
        dzHypVermittlerNummer:
          type: string
        naevVermittlerNummer:
          type: string
        rUndvBankAgenturNummer:
          type: string
        rUndvBlzVertriebsbank:
          type: string
        bausparkasseMainzVermittlerNummer:
          type: string
        deutscherRingVermittlerNummer:
          type: string
        alteLeipzigerVerbundVermittlerNummer:
          type: string
        signalIdunaBetreuerNummer:
          type: string
        signalIdunaFilialDirektionNummer:
          type: string
        hanseaticVertriebsPartnerNummer:
          type: string
        commerzbankVermittlerNummer:
          type: string
        vertriebsOrganisation:
          type: object
          properties:
            name:
              type: string
            firma:
              type: string
            vertriebsOrganisationsId:
              type: string
            partnerId:
              type: string
    Paragraph34c:
      title: Paragraph34c
      type: object
      description: Nachweisinformationen für die Zulassung zur Baufinanzierungsberatung.
      properties:
        registrierungsNummer:
          type: string
          example: D-W-153-ULVY-65
          description: registration number of supervisor authoritity
        aufsichtsBehörde:
          type: string
          example: 'IHK Berlin, Fasanenstraße 85, 10623 Berlin'
          description: supervisor authority
    Typ:
      type: string
      enum:
        - PERSON
        - ORGANISATION
    Zugang:
      title: Zugang
      type: object
      description: user access
      x-examples:
        for own identity provider:
          partnerId: ABC12
          benutzername: max.mustermann@email.de
          status: ZUGANG_REGISTRIERT
          identityProviderConfigURL: 'https://auth.meineDomain.de/adfs/.well-known/openid-configuration'
      properties:
        partnerId:
          type: string
          example: ABC12
        benutzername:
          type: string
          example: max.mustermann@email.de
          description: 'username, unique at Europace as e-mail address'
        status:
          type: string
          enum:
            - KEIN_ZUGANG
            - ZUGANG_UNBESTAETIGT
            - ZUGANG_REGISTRIERT
            - ZUGANG_REGISTRIERT_KEIN_ZUGANG
            - BENUTZERNAME_AENDERUNG_UNBESTAETIGT
          description: |-
            KEIN_ZUGANG = no user name is assigned
            ZUGANG_UNBESTAETIGT = Username is assigned but not yet verified
            ZUGANG_REGISTRIERT = Username is assigned and verified
            ZUGANG_REGISTRIERT_KEIN_ZUGANG = Username is assigned and verified but locked
            BENUTZERNAME_AENDERUNG_UNBESTAETIGT = Username has been changed and not yet verified
        identityProviderBenutzername:
          type: string
          description: username at the identity provider. If it is <null> `username` is used.
        identityProviderConfigURL:
          type: string
          description: valid identity provider used when user authenticates
      required:
        - partnerId
        - status
    Person:
      title: Person
      type: object
      description: user
      properties:
        anrede:
          type: string
          description: gender
        vorname:
          type: string
          description: firstname
        nachname:
          type: string
          description: surname
        titelFunktion:
          type: string
          description: title
        geburtsdatum:
          type: string
          description: birthday
    Organisation:
      title: Organisation
      type: object
      properties:
        organisationsName:
          type: string
          description: name of the organisation
      description: 'organisation, team or company'
    Error:
      title: Error
      type: object
      properties:
        message:
          type: string
        traceId:
          type: string
      required:
        - message
  responses: {}
security:
  - europace_oauth2: []
